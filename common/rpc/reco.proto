syntax = "proto3";


// web后台调用推荐系统接口，获取推荐文章id的请求参数
message UserRequest {
    string user_id=1; // 用户id， 1代表第一个参数  改成字符串原因：兼容匿名用户
    int32 channel_id=2; // 文章的频道id 2代表第二个参数
    int32 article_num=3; // 返回推荐的文章的数量
    int64 time_stamp=4; // 推荐时间戳


}

// 推荐的文章的埋点数据
message Track {

    string click=1; // 点击
    string collect=2; // 收藏
    string share=3; // 分享
    string read=4; // 阅读

}


// 推荐的文章具体数据
message Article {

    int32 article_id=1; // 文章的id
    Track track=2; // 埋点数据

}


// 推荐系统返回给web后台的响应参数
message ArticleResponse {

    string exposure=1; // 曝光参数
    int64 time_stamp=2; // 推荐的时间戳
    // repeated 类似python中的list，表示可以重复出现的元素
    repeated Article recommends=3;  // 推荐的文章具体数据，内部包含文章id，以及埋点数据  recommends = [Article ]

}


// 需求：web后端需要调用推荐系统中的方法，获取推荐文章数据
// 使用：user_recommend(UserRequest()) ====> 返回ArticleResponse  ====> 推荐文章数据

// 定义服务---类似于python中的类
service UserArticleRecommend {

    // 定义具体推荐的函数
    rpc user_recommend(UserRequest) returns (ArticleResponse) {}

}